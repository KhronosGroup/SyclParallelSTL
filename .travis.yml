language: cpp

env:
  global:
    # Ubuntu version
    - LINUX_DIST=precise
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    - CXX_FLAGS="-Wall -pedantic -Werror -Wno-variadic-macros -Wno-long-long -Wno-shadow"
    # Boost
    - BOOST_VERSION=default
    # Misc
    - RUN_TESTS=true
    - COVERAGE=false

before_install:
    # Download and install Boost
    - |
      if [[ ${TRAVIS_OS_NAME} == "linux" && ${BOOST_VERSION} != "default" ]]; then
        if [ ! -f "${DEPS_DIR}/boost/${BOOST_VERSION}_cached" ]; then
          # create dirs for source and install
          mkdir -p ${DEPS_DIR}/boost${BOOST_VERSION}
          mkdir -p ${DEPS_DIR}/boost
          rm -rf ${DEPS_DIR}/boost/*
          # download
          travis_retry wget --no-check-certificate --quiet -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/boost${BOOST_VERSION}
          pushd ${DEPS_DIR}/boost${BOOST_VERSION}
          # configure and install
          echo "using gcc : 4.8 : g++-4.8 ;" > $HOME/user-config.jam
          ./bootstrap.sh --prefix=${DEPS_DIR}/boost/ --with-libraries=program_options,filesystem,system,thread,test,timer,chrono
          ./b2 -d0 install
          popd
          touch ${DEPS_DIR}/boost/${BOOST_VERSION}_cached
        else
          echo 'Using cached Boost ${BOOST_VERSION} libraries.'
        fi
        export CMAKE_OPTIONS=" -DBOOST_ROOT=${DEPS_DIR}/boost"
      fi

    ############################################################################
    # Download OpenCL headers (and cl.hpp)
    ############################################################################
    - |
      if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
        mkdir -p ${OPENCL_ROOT}/include/CL
        pushd ${OPENCL_ROOT}/include/CL
        travis_retry git clone --depth 1 https://github.com/KhronosGroup/OpenCL-Headers.git -b opencl${OPENCL_VERSION}
        mv ./OpenCL-Headers/* .
        travis_retry wget -w 1 -np -nd -nv -A h,hpp --no-check-certificate ${OPENCL_REGISTRY}/api/2.1/cl.hpp;
        popd
      fi

script:
    ###########################
    # Get triSYCL
    ###########################
    - wget https://github.com/triSYCL/triSYCL/archive/master.zip -O /tmp/trisycl.zip
    - unzip /tmp/trisycl.zip -d /tmp

    ###########################
    # Build parallel-stl
    ###########################
    - ./build.sh --trisycl -DTRISYCL_INCLUDE_DIR=/tmp/triSYCL-master/include 


after_success:
    - |
      if [[ ${COVERAGE} == "true" ]]; then
        lcov --directory test --base-directory ../include/boost/compute/ --capture --output-file coverage.info
        lcov --remove coverage.info '/usr*' '*/test/*' -o coverage.info
        cd .. && coveralls-lcov build/coverage.info
      fi
